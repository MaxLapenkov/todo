{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item/index.js","components/add-item/add-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","onChangeValue","props","setState","target","value","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","changeFilterClass","btns","document","getElementsByClassName","onChangeStateFilter","onChangeFilter","i","length","AddItem","onLabelChange","onSubmit","preventDefault","onAdded","App","maxId","todoData","createTodoItem","filter","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","searchItem","items","toLowerCase","indexOf","changeStateFilter","changeFilter","arr","propName","oldItem","visibleItems","doneCount","todoCount","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c49bad20.chunk.js","sourcesContent":["import AppHeader from './app-header'\r\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component  {\n  \n  state = {\n    term: ''\n}\nonSearchChange = (e) => {\n  const {onChangeValue} = this.props\n  this.setState({\n      term: e.target.value\n  })\n  onChangeValue(e.target.value)   \n}\n  render() {\n    \n    return (\n      <input type=\"text\"\n                className=\"form-control search-input\"\n                placeholder=\"type to search\"\n                value = {this.state.term} \n                onChange={this.onSearchChange}\n                  />\n    );\n  }\n  \n};\n\n\n","import TodoListItem from './todo-list-item';\r\nexport default TodoListItem;","import React, {Component} from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n  \n  render() {\n    const {label, onDeleted, onToggleImportant, onToggleDone, important, done} = this.props;\n\n    let classNames = 'todo-list-item'\n    \n    if(done) {\n      classNames += ' done';\n    }\n    if(important) {\n      classNames += ' important';\n    }\n\n  \n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick = { onToggleDone}>\n          {label}\n        </span>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick = { onToggleImportant }>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick = {onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  }\n}\n\n\n\n\n","import TodoList from './todo-list';\r\nexport default TodoList;","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem \n        {...itemProps }\n        onDeleted = {() => onDeleted(id)}\n        onToggleImportant={() => onToggleImportant(id)}\n        onToggleDone={() => onToggleDone(id)} \n      />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemStatusFilter from './item-status-filter'\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component{\n  \n  \n  \n  changeFilterClass = (e) => {\n    let btns = document.getElementsByClassName('btn-filter');\n    const {onChangeStateFilter, onChangeFilter} = this.props\n    \n    onChangeStateFilter(e.target.value);\n    onChangeFilter();\n\n    \n    for(let i = 0; i< btns.length; i++) {\n      btns[i].className = \"btn btn-outline-secondary btn-filter\"\n    }\n    \n    e.target.className = \"btn btn-info btn-filter\";\n  }\n  \n  \n  render() {\n      return (\n        <div className=\"btn-group\">\n          <button type=\"button\"\n                  \n                  className= 'btn btn-info btn-filter'\n                  value=\"all\" \n                  onClick={this.changeFilterClass}>All</button>\n          <button type=\"button\"\n                  \n                  className='btn btn-outline-secondary btn-filter'\n                  value=\"active\" \n                  onClick={this.changeFilterClass}>Active</button>\n          <button type=\"button\"\n                   \n                  className='btn btn-outline-secondary btn-filter'\n                  value=\"done\" \n                  onClick={this.changeFilterClass}>Done</button>\n        </div>\n      ); \n  }\n}\n\n\n\n","import AddItem from './add-item'\r\nexport default AddItem;\r\n","import React, {Component} from 'react' \r\nimport './add-item.css'\r\n\r\nexport default class AddItem extends Component{\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })   \r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form className = \"add-item d-flex\"\r\n                  onSubmit = {this.onSubmit}>\r\n                \r\n                <input type=\"text\" \r\n                       className=\"form-control\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"what is need to be done\"\r\n                       value ={this.state.label}/>\r\n                <button className=\"btn btn-primary add-item-btn\"\r\n                        >\r\n                Add Item\r\n                </button>\r\n            </form>\r\n          );\r\n    }\r\n    \r\n}\r\n","import App from './app'\r\nexport default App;","import React, {Component} from 'react';\r\n\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport AddItem from '../add-item/';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Make Awesome App'),\r\n      this.createTodoItem('Have a lunch')\r\n    ],\r\n    term: '',\r\n    filter: ''// active Done all\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label: label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({todoData}) => {\r\n      const idx = todoData.findIndex((el) => el.id === id)\r\n\r\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\r\n\r\n      return {\r\n        todoData: newArray\r\n      }\r\n      \r\n    })\r\n    \r\n  };\r\n  addItem = (text) => {\r\n    \r\n    const newItem = this.createTodoItem(text);\r\n  \r\n\r\n    this.setState(({todoData}) => {\r\n     \r\n      const newArray = [\r\n        ...todoData,\r\n        newItem\r\n      ]\r\n      \r\n      return {\r\n        todoData: newArray\r\n      }\r\n      \r\n    })\r\n}\r\n  toggleProperty(arr, id, propName) {\r\n    \r\n      const idx = arr.findIndex((el) => el.id === id)\r\n      const oldItem = arr[idx];\r\n      const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n      return [\r\n        ...arr.slice(0, idx),\r\n        newItem,\r\n        ...arr.slice(idx + 1)\r\n      ];\r\n  }\r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      }\r\n    });\r\n    \r\n  };\r\n  onToggleDone = (id) => {\r\n    this.setState(({todoData}) => {\r\n\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      }\r\n    });\r\n    \r\n  };\r\n  onChangeValue = (term) => {\r\n    this.setState({term})   \r\n  }\r\n  searchItem = (items, term) => {\r\n    \r\n    if(term.length === 0) {\r\n      return items;\r\n    }\r\n    \r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase()\r\n      .indexOf(term.toLowerCase()) > -1\r\n    });\r\n    \r\n    \r\n    \r\n    \r\n      \r\n    }\r\n  changeStateFilter = (filter) => {\r\n    this.setState({filter});\r\n  }\r\n  changeFilter = (items, filter) => {\r\n    switch(filter) {\r\n      case 'all': \r\n      return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done)\r\n        default:\r\n          return items;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {todoData, term, filter} = this.state;\r\n\r\n    let visibleItems = this.changeFilter(this.searchItem(todoData, term), filter)\r\n          \r\n    const doneCount = todoData\r\n                                .filter((el) => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel\r\n          onChangeValue={this.onChangeValue}/>\r\n          <ItemStatusFilter\r\n          onChangeStateFilter = {this.changeStateFilter}\r\n          onChangeFilter = {this.changeFilter}/>\r\n        </div>\r\n  \r\n        <TodoList todos={visibleItems} \r\n        onDeleted={this.deleteItem}\r\n        onToggleImportant={this.onToggleImportant}\r\n        onToggleDone={this.onToggleDone} />\r\n        <AddItem \r\n        onAdded = {this.addItem}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app'\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}